<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Che's Blog</title><link>https://blog.chezs.me/</link><description>Recent content on Che's Blog</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><lastBuildDate>Mon, 20 Mar 2023 23:10:04 +0800</lastBuildDate><atom:link href="https://blog.chezs.me/index.xml" rel="self" type="application/rss+xml"/><item><title>灵魂的渴望 是你命运的先知 持续往前走 创造更多选择的自由</title><link>https://blog.chezs.me/diary/2023-03-20/</link><pubDate>Mon, 20 Mar 2023 23:10:04 +0800</pubDate><guid>https://blog.chezs.me/diary/2023-03-20/</guid><description/></item><item><title>逻辑思维 + 换位思考；逻辑思维是将内容组织起来的方式，关键是概念抽象、判断、推理；换位思考的前提是彼此了解、理解、信任</title><link>https://blog.chezs.me/diary/2023-03-16/</link><pubDate>Thu, 16 Mar 2023 22:39:14 +0800</pubDate><guid>https://blog.chezs.me/diary/2023-03-16/</guid><description/></item><item><title>没有理想的人不伤心</title><link>https://blog.chezs.me/diary/2023-01-22/</link><pubDate>Sun, 22 Jan 2023 00:37:15 +0800</pubDate><guid>https://blog.chezs.me/diary/2023-01-22/</guid><description/></item><item><title>当你被拿捏时，可以从「真实性」、「必要性」的角度思考</title><link>https://blog.chezs.me/diary/2023-01-21/</link><pubDate>Sun, 22 Jan 2023 00:37:10 +0800</pubDate><guid>https://blog.chezs.me/diary/2023-01-21/</guid><description/></item><item><title>发现利润区读书记录</title><link>https://blog.chezs.me/posts/the-profit-zone/</link><pubDate>Tue, 01 Nov 2022 23:15:46 +0800</pubDate><guid>https://blog.chezs.me/posts/the-profit-zone/</guid><description>主要思想 以客户为中心，以利润为中心
实践工具 - 12 个问题 我的客户是哪些人？ 包括但不限于 C端、B端（上下游产业链合作者）、机器（例如自动售货机）等
客户偏好的现状（为什么喜欢我的产品），直接的原因是什么（例如节约资金、规避风险、安全保障等）
间接原因需要挖掘，可以调研同一个客户在其他行业的行为模式，推理判断。
换位思考，尝试从客户的角度出发。
客户的偏好如何变化？ 变化的维度包括：产品功能丰富度/成熟度、价格、质量、交付周期等
分析本行业历史几年的变化趋势。
结合客户涉及到的上下游行业，判断未来几年的变化趋势。
哪些人应当是我的客户？ 沿着价值链挖掘新客户。
换个方向努力，成为其他公司的供应商。
如何为客户增加价值？ 围绕客户的偏好，以客户为中心，回答此问题。
如何才能成为客户的首选？ 围绕客户的偏好，和竞对 PK。
盈利模式是什么？ 书中第三章附录了 22 种盈利模式，通常来说可以先从降低成本开始。
许多情况下，企业会利用 2-3 种盈利模式。
目前的企业设计是怎样的？ 四大战略要素：客户选择、价值获取、产品差异化/战略控制、业务范围。
通常可以针对每一类客户细分这四大要素。
真正的竞争对手是谁？ 尽可能站在宽广的视角分析，很多对手来自其他行业。
从自己的视角和用户的视角，绘制两张雷达图。
最难对付的竞争对手的企业设计是什么样的？
下一个企业设计是什么样的？
围绕客户偏好的变化，以客户为中心，思考下一个企业设计。
战略控制点是什么？ 战略控制点是防火墙，也是销售额 -&amp;gt; 市值的杠杆。
战略控制点包括：品牌、专利、技术领先两年、20%成本优势、拥有客户关系、分销控制、供应控制、价值链控制、行业标准等。
公司价值如何？ 销售利润率、预期利润增长率、资产效率、市值/销售额</description></item><item><title>技术架构中的细腰</title><link>https://blog.chezs.me/posts/narrow-waist/</link><pubDate>Mon, 12 Sep 2022 22:49:08 +0800</pubDate><guid>https://blog.chezs.me/posts/narrow-waist/</guid><description>背景 处理器指令集基本上分成两个流派：
CISC（复杂指令计算机）：例如 Intel 的 x86 平台。特点是 ISA 功能多，但是复杂混乱 （ISA，指令集架构） RISC（精简指令计算机）：例如苹果、思科、Sun 等。特点是有一个更精简的 ISA，处理器会专注于核心指令，复杂的功能交给软件来完成，所以它的性能、功耗都更优秀 处理器多年以来一直处于“战争”状态，上一次战争的结果是 Intel x86 轻松获胜，获胜的关键点就在 ISA。
PC 时代 PC 用户对性能和功耗的需求没有那么强，CISC 在当时是个比较成熟的方案。而 RISC 刚兴起，反而是 PC 软件开发者认为 ISA 功能丰富度很重要。
Intel 认知到：硬件是一种软件。如果新的 CPU 实现了一个重要的 ISA 扩展，消费者将有充分的理由升级。比如，一个软件需要至关重要的安全扩展，Intel 可以内置，而 RISC 风格的处理器会让软件来完成。
现如今，移动互联网又带火了 ARM 架构。长期来看 RISC 没有失败，甚至在逐渐兑现刚提出时的愿景，CISC 看起来又是一个“没什么前途”的方向。
细腰 如果把计算机系统堆栈分层来看，上层是应用程序，底层是硬件。ISA 是整个堆栈的细腰部分。作为技术栈中最稳定的“细腰”接口，x86 ISA 是功能丰富的关键。
认知 细腰通常对应的特点是：简单、抽象、功能正交、功能组合 细腰的功能丰富度会帮助商业成功，但是也带来了复杂度和性能体验问题 当上下游被某个大公司把控时，细腰是可以被替代的，例如 Google QUIC 对于 TCP</description></item><item><title>Eth Getting Started</title><link>https://blog.chezs.me/posts/eth-getting-started/</link><pubDate>Sun, 28 Aug 2022 16:05:13 +0800</pubDate><guid>https://blog.chezs.me/posts/eth-getting-started/</guid><description>ETH 的特点 ETH是一个分布式的状态机，以交易作为状态转换的事件。在发生交易时，可以单纯收款，也可以用合约的形式运行代码，变更状态。
合约部署在ETH上，部署后不可更改/升级，只能删除。部署形式是二进制码，开发语言包括Solidity、Vyper等。
状态通常只存储交易信息、元数据等。ETH的存储成本很高，目前依赖区块链以外的资源存储真正的数据内容。
ETH 通过预言机同步区块链以外的数据。
DApps 的特点 优势：
分布式系统的优势：没有单点故障 ➡️ 可用性，数据难以被篡改 ➡️ 数据真实性 所有DApps都能访问ETH上的数据，一定程度上能实现跨DApps共享数据，降低数据烟囱。（但降低数据烟囱也可以用All in ONE达成） ➡️ 数据共享 利益链条扁平化可以带来交易成本上的机会，但是也伴随风险 劣势：
维护成本高：合约部署后，无法更改/升级。同时一个纯粹的DApps没有特权用户（程序员可以自己实现，但也开了后门） 难以认识你的客户（KYC）：用户无需提供真实身份就能使用DApps 速度慢：目前的速度是 10-15个交易/秒 Use Cases Augur：菠菜 【数据真实性】 BitTorrent：文件共享 【数据共享】IPFS、Swarm Golem：租用计算资源 【数据共享】 Melonport：虚拟资产管理【数据真实性】 OMG Network：ETH 交易【数据真实性】 OpenSea：NFT 市场【数据真实性】 Entre：web3 时代的 Linkedin，DAO 相关，通常也支持Blog【数据共享】 Protico： 即时通信（必要性？） LBRY： web3 音视频服务（上下游还包括分布式的音视频转码服务等）【数据共享】 Presearch： 搜索引擎【基建】 DNS【基建】 钱包【基建】 新闻【数据真实性】 电商: TODO O2O: TODO Layer 2（加速/可扩展性）【基建】： Polygon 前端开发 Whisper通信协议： web3.js 使用 Whisper 协议与 ETH 通信。
P2P节点之间的异步广播协议，通常的实现都是发布-订阅模式，使用工作量算法防御DDoS。</description></item><item><title>无为的一个解释是把所有事都做了，但好像什么都没做一样</title><link>https://blog.chezs.me/diary/2022-07-30/</link><pubDate>Sat, 30 Jul 2022 23:40:59 +0800</pubDate><guid>https://blog.chezs.me/diary/2022-07-30/</guid><description/></item><item><title>分支模型要解决的还是并发问题</title><link>https://blog.chezs.me/diary/2022-07-15/</link><pubDate>Fri, 15 Jul 2022 02:25:51 +0800</pubDate><guid>https://blog.chezs.me/diary/2022-07-15/</guid><description/></item><item><title>在没有动力的时候，可以先从一件小事开始。比如，先喝一杯水。</title><link>https://blog.chezs.me/diary/2022-06-30/</link><pubDate>Thu, 30 Jun 2022 01:22:12 +0800</pubDate><guid>https://blog.chezs.me/diary/2022-06-30/</guid><description/></item><item><title>规划能力是TL的核心竞争力之一。规划要有预判，有逻辑，有推理。从核心环节切入，发现技术债，发现提升点，发现技术储备思路。</title><link>https://blog.chezs.me/diary/2022-06-17/</link><pubDate>Fri, 17 Jun 2022 00:11:20 +0800</pubDate><guid>https://blog.chezs.me/diary/2022-06-17/</guid><description/></item><item><title>太用力的人走不远。平常心。</title><link>https://blog.chezs.me/diary/2022-05-28/</link><pubDate>Sat, 28 May 2022 01:04:53 +0800</pubDate><guid>https://blog.chezs.me/diary/2022-05-28/</guid><description/></item><item><title>授权的背后是Review</title><link>https://blog.chezs.me/diary/2022-05-27/</link><pubDate>Fri, 27 May 2022 01:04:47 +0800</pubDate><guid>https://blog.chezs.me/diary/2022-05-27/</guid><description/></item><item><title>受过教育，并拥有自由支配时间的人，他们有丰富的知识背景，同时有强烈的分享欲望。这些人的时间汇聚在一起，产生巨大的社会效应。这就是认知盈余。</title><link>https://blog.chezs.me/diary/2022-05-20/</link><pubDate>Fri, 20 May 2022 21:53:04 +0800</pubDate><guid>https://blog.chezs.me/diary/2022-05-20/</guid><description/></item><item><title>通常来说，配给制度既没有长期作用，又容易滋生腐败，令人极度焦虑。它会伤害穷人，破坏生态系统，鼓励走私活动和独裁行为。</title><link>https://blog.chezs.me/diary/2022-05-19/</link><pubDate>Thu, 19 May 2022 14:32:30 +0800</pubDate><guid>https://blog.chezs.me/diary/2022-05-19/</guid><description/></item><item><title>《纳瓦尔宝典》读书笔记</title><link>https://blog.chezs.me/posts/the-almanack-of-naval-ravikant-reading-notes/</link><pubDate>Sat, 14 May 2022 23:31:07 +0800</pubDate><guid>https://blog.chezs.me/posts/the-almanack-of-naval-ravikant-reading-notes/</guid><description>信息时代的杠杆 杠杆有三大类：
一类杠杆是人力——让其它人为你工作。这是最古老的杠杆类型，然而在现代社会这不是一个最大的杠杆。我认为这是最差的杠杆形式。管理他人是极其混乱的。它需要卓越的领导才能。你离被人背叛、被人吃掉、被人撕碎只有一步之遥。 一类比较好的杠杆是金钱。意味着你每次做出决定时，都会用钱与之相乘。资本是一类比较难使用的杠杆。它相对来说更现代。在上个世纪，有人用它获得了大财富。它可能是上个世纪最主要的杠杆类型。 最后一类杠杆是全新的——也是最民主的一类。它是：”没有边际复制成本的产品。“这些包括书籍、媒体、电影和代码。代码是最强大且无需许可的一种杠杆。你只需要一台电脑——你不需要任何人的许可。 判断力 1.判断力的价值： 一个智慧而富有判断力的人，首先要知道个人行为的长期结果，然而做出正确决策并付诸行动。
在信息时代，代码/出版物极大降低了边际复制成本，涌现了多种多样的杠杆。因此，正确的决策可以帮我们赢得一切。
2.判断力的基础一：清晰思考 真正的知识具有内在关联性，就像一根链条，从基础层面到应用层面环环相扣。掌握基础知识，用基础知识解读热点问题和新技术。头脑清晰的思考者能够建立自己的权威。
3.判断力的基础二：认清现实 有效决策体现在很多方面，其中一个关键是处理现实问题。要直面现实，就要放下自我，消除自我意识，忘记自我判断，平复自我情绪。
4.执行判断一：决策技巧 决策技巧能够对应到判断力的基础：
清晰思考：要选择长期来看收益最大的方法，而不是只顾眼前得失。 认清现实（放下偏见）：几乎所有的偏见都是为了帮助人们在信息不完整的情况下迅速做出判断（思考快与慢）。对于重要的决策，要抛开记忆和身份，专注问题本身。为了放下偏见，你要更坦诚。 5.执行判断二：心智模型 心智模型是我们理解世界的方式。它们不仅塑造了我们的思维和理解方式，而且塑造了我们对事物之间关系和机遇的洞察。心智模型是我们简化复杂性的手段，让我们能够回答为什么我们认为一些事情比其他事情更相关，以及我们如何推理，最终做出判断。
经典心智模型：进化论、博弈论、查理芒格心智模型等
6.持续增强判断力：热爱阅读，终身学习 阅读经典作品，关注底层原理和基础知识。以原著和经典为基础，能够获得足够完备的世界观和深刻的理解力。
7.小结 $$ 信息时代的杠杆 * [(清晰思考能力 + 认清现实能力) * (决策技巧 + 心智模型)] ^ {终身学习} $$</description></item><item><title>人生可悲的事情莫过于不满意自己却又自我安慰。世上没有比唤醒自己更困难的事了，蜕变在于真心付出自律坚持，赢在行动。</title><link>https://blog.chezs.me/diary/2022-05-14/</link><pubDate>Sat, 14 May 2022 23:14:42 +0800</pubDate><guid>https://blog.chezs.me/diary/2022-05-14/</guid><description/></item><item><title>自卑与超越读后感</title><link>https://blog.chezs.me/posts/what-life-could-mean-to-you/</link><pubDate>Tue, 10 May 2022 23:32:10 +0800</pubDate><guid>https://blog.chezs.me/posts/what-life-could-mean-to-you/</guid><description>自卑与超越 What Life Could Mean to You
本周学习了一本书《自卑与超越》，作者是阿尔弗雷德·阿德勒，他是著名心理学家弗洛伊德的学生，更是个体心理学学派的创始人。本书是他的代表作之一，围绕着“人生的意义”讨论了磨难、自卑感与超越的方法。指出：人类的行为皆出自于自卑感以及对自卑感的克服和超越。了解自身潜在阴影与缺陷，打破自身的枷锁，才能正确对待人生并超越自我。
我总结一下我学到的知识点：
第一部分：人生的意义 本书开篇便点出每个人打从出生就必须面对的人生三大约束以及相关问题：
我们无法离开地球生存 ➡️ 地球资源有限，为了生存，我应该如何工作？ 个人并不是唯一的人类 ➡️ 如何在社区中找到自己的定位，促进大家的合作和分享利益？ 人类有男女两种性别 ➡️ 面对男女有别、人类需要生存延续，我们应该如何调整自我？ 剩下的问题通常都是这三类问题的衍生或具象。
第二部分：自卑和优越感 当一个人面对某个问题毫无准备或手足无措时，就会认定自己不能解决问题，这种被夸大的不自信就被称为自卑情节。人有自卑感是正常的。有了自卑感，人才有动力进一步改善周围的环境。不幸的是，通常我们认为过于自卑的人通常在人生之初就遇到了阻碍。他们对人生的看法比较肤浅，因此遇到的难题更大，自卑感更强。
一个人获得优越感时可以摆脱自卑。获取优越感是一个很个性化的目标，是由个人对人生意义的理解而决定的。外界援助者需要结合帮助对象的个人经历、行为、语言等因素理解他的人生观，设身处地去体谅他为之付出的努力。
具体来说，对于“普通人”而言，如何获得优越感？因为人的社会性，如果我们追求的优越感包含对社会利益的高度关注，那么其意义会被更多人理解，个人也不容易烦更多错误。
第三部分：引导儿童选择职业 职业问题很常见，例如：
有些人经常用职业问题当借口，来逃避婚姻问题。 有些人对任何工作都不满意，他只想不费力就比别人强。这通常是受到溺爱的孩子 有些人只想安于现状，当个小职员就好 如何正确引导儿童的职业观？
发现孩子的兴趣：不仅仅是问“你长大想做什么工作？”，还可以结合“过家家”、“体育运动”等，发现孩子的兴趣 奋斗目标：努力比家里任何人强是孩子们最常见的奋斗目标之一，尤其是要比自己的父母强 将个人目标和社会利益绑定起来：举个反例，如果过度培养孩子重视金钱的观念，但不引导他关注社会，孩子完全可以通过犯法的途径获得金钱。这显然是错误的。</description></item><item><title>微信小程序WASM现状更新</title><link>https://blog.chezs.me/posts/wechat-miniprogram-wasm/</link><pubDate>Tue, 15 Feb 2022 23:30:17 +0800</pubDate><guid>https://blog.chezs.me/posts/wechat-miniprogram-wasm/</guid><description>1、兼容性是最大问题 线上情况：占比暂无，但已知一套检测方案
检测 WXWebAssembly 和 WXWebAssembly.instantiate 是否已定义 如未定义或遇到异常，则不兼容 实验情况：iOS不支持，高版本Android支持，低版本Android不支持。
iOS 15.4内置的Safari支持WASM，但微信侧做了限制。
2、功能差异 在加载➡️ 声明➡️ 调用三个阶段都有差异。
2.1、加载 目前仅支持代码包路径，不支持网络路径 编译出来的 .wasm 体积太大，超过代码包体积限制怎么办？ 方法一：把一个 wasm 文件拆分为多个 wasm 文件，然后利用分包加载能力来减少首包体积 方法二：使用 brotli 压缩 wasm 文件 不支持Compile API （端上无法做字节码增强了） 2.2、声明 export 支持函数、Memory、Table（基本够用）iOS 平台暂不支持 Global
2.3、调用 不支持Worker内调用WASM
3、小结 最大的问题还是兼容性，兼容性主要受到操作系统版本影响。升级的周期较长，短期恐怕难以大规模应用。因此基于WASM增强端上能力的思路短期难以落地。
微信小程序为了做卡控，对WASM的加载、声明和调用做了一系列限制，但整体可以接受。</description></item><item><title>工作中要保持理智，避免针对人的情绪，感谢邻居大爷的批评指导</title><link>https://blog.chezs.me/diary/2021-10-29/</link><pubDate>Fri, 29 Oct 2021 00:01:08 +0800</pubDate><guid>https://blog.chezs.me/diary/2021-10-29/</guid><description/></item><item><title>祝我父亲生日快乐</title><link>https://blog.chezs.me/diary/2021-10-28/</link><pubDate>Thu, 28 Oct 2021 23:49:21 +0800</pubDate><guid>https://blog.chezs.me/diary/2021-10-28/</guid><description/></item><item><title>从微服务的反模式联想到微前端</title><link>https://blog.chezs.me/posts/anti-pattern-from-micro-service-to-micro-frontend/</link><pubDate>Tue, 26 Oct 2021 23:49:44 +0800</pubDate><guid>https://blog.chezs.me/posts/anti-pattern-from-micro-service-to-micro-frontend/</guid><description>微前端借鉴了微服务的思想，因此我联想到可以从微服务的反模式吸取经验，更好地落地微前端。
微服务架构的好处包括便于测试，快速，易于部署，细粒度的可扩展性，模块化和敏捷性。然而，开发微服务的时候陷入了服务粒度，数据迁移，组织形式改变和分布式处理的斗争中。
典型的微服务反模式 服务粒度地狱 服务粒度至关重要，它会影响应用的性能、健壮性、可靠性、可测性、甚至发布模型。
服务粒度应该随着业务渐进式发展，但是社区提供了衡量服务粒度的参考。
衡量服务粒度的标准包括：
服务的范围/功能：当一个操作和基本的CRUD操作无关，那么大概率应该拆分为单独的服务 数据库事务：如果不能实现ACID事务，那么大概率要拆分为多个微服务，并达成最终一致性 服务编排的复杂度：当一个逻辑需要调用多个服务时，服务粒度可能太细 依赖地狱 微服务是一种无共享的架构，但是总有一些代码会在微服务之间共享。比如不提供一个身份验证的微服务，而是将身份验证的代码打包成一个jar文件：security.jar，其它服务都能使用。如果安全检查是服务级别的功能，每个服务接收到请求都会检查安全性，这种方式可以很好的提高性能。
但是这会引起依赖地狱。（依赖过多，多重依赖，依赖冲突，依赖循环）最终导致系统性问题，例如安装大量依赖或无法工作。
典型场景包括4种：共享仓库，共享类库，复制，整合（整合可能是相对优雅的依赖处理方案，做成一个单独的服务）
其他 数据迁移和分布式处理与前端的关联似乎不紧密。
微前端反模式 结合微服务的反模式，我总结了两个典型问题的对策。
粒度地狱 可以分析以下几个关键问题，确认是否进行拆分：
性能：评估白屏时间、秒开率，以及完成核心业务流程需要经历的操作、页面跳转 可靠性：评估是否容易被其他业务影响 可测性：评估当前页面是否大量依赖其他业务的流程、数据 发布模型：评估能否独立发布，业务闭环 依赖地狱 可以分析以下几个关键问题：
数量：依赖数量避免过多 形式：NPM包、平台服务（SSO、权限等）、共享仓库、DLL js等 可用性：依赖的测试质量、SLA等 维护团队：评估维护团队是否可靠</description></item><item><title>人菜瘾大 无能狂怒 自省</title><link>https://blog.chezs.me/diary/2021-09-19/</link><pubDate>Sun, 19 Sep 2021 19:31:46 +0800</pubDate><guid>https://blog.chezs.me/diary/2021-09-19/</guid><description/></item><item><title>随想 2021 08</title><link>https://blog.chezs.me/posts/thinking-at-2021-08/</link><pubDate>Sat, 28 Aug 2021 23:24:51 +0800</pubDate><guid>https://blog.chezs.me/posts/thinking-at-2021-08/</guid><description>无论软件开发的酸甜苦辣，计算机和互联网确实给21世纪00年至20年的程序员带来了一笔不小的财富，很多人确实得到了一些收获。比如我自己，在买房买车后，确实产生了一种“升职加薪 当上总经理 出任CEO 赢取白富美 走上人生巅峰 想想还有点小激动”的心态。但是，物质生活的刺激确实不够持久。在激素逐渐回归到常态后，我开始陷入迷茫和痛苦。
我开始不由自主地思考一些抽象的问题，比如，我的人生目标是什么？我尝试着进行回答，例如一个美满的家庭，技术上的突破，开博物馆等等。这些回答看起来有些不着边际，像一个不知所措的人在迷茫中挣扎。
所幸，已经有很多伟人、大师思考过此类问题，遗留了一本本名著，是后人在迷茫中的灯塔，是后人被社会毒打时的盔甲，也是后人自我救赎的指南。
瓦尔登湖是一本讲述隐居故事的书。和Gap Year一样，隐居并不是单纯地逃离社会，而是主动地通过控制影响因素，在不断自我创造的过程中，寻找人生价值的过程。这个过程应该是内心平和地、充满动力地生活，自我依赖和持续创造。在这个过程中，发现人生价值，获得幸福。
回到我自己，家庭和社会因素导致我很难有隐居的机会，但是我仍然可以在日常生活中体验这个过程。比如装修房子，有人喜欢全权委派装修公司，有人喜欢轻工辅料，有人甚至自己动手。由于家庭和工作，我选择轻工辅料，跟进装修的过程中让我体验到为自己付出的满足感，以及选材、设计过程中的快乐。
在技术领域和职业生涯方面，我同样需要创造这样的过程。我想，这个过程可能会从一个比较抽象的问题开始，但是我甚至还没有找到这个问题。那么，让我学习如何提问吧。</description></item><item><title>长时间疲于奔命通常会让身体做更多快思考，错过正确的事。调整节奏，每周复盘，不要像个大笨蛋</title><link>https://blog.chezs.me/diary/2021-08-15/</link><pubDate>Sun, 15 Aug 2021 22:07:19 +0800</pubDate><guid>https://blog.chezs.me/diary/2021-08-15/</guid><description/></item><item><title>食之无味 弃之可惜 996 装修</title><link>https://blog.chezs.me/diary/2021-07-04/</link><pubDate>Sun, 04 Jul 2021 22:06:40 +0800</pubDate><guid>https://blog.chezs.me/diary/2021-07-04/</guid><description/></item><item><title>人生中第一个父亲节在建材城度过，争取装一个温暖的家</title><link>https://blog.chezs.me/diary/2021-06-20/</link><pubDate>Sun, 20 Jun 2021 23:27:18 +0800</pubDate><guid>https://blog.chezs.me/diary/2021-06-20/</guid><description/></item><item><title>冰淇淋和夜晚的凉风让昏昏沉沉将近一个月的大脑终于清醒起来</title><link>https://blog.chezs.me/diary/2021-05-13/</link><pubDate>Thu, 13 May 2021 23:01:05 +0800</pubDate><guid>https://blog.chezs.me/diary/2021-05-13/</guid><description/></item><item><title>攘外必先安内</title><link>https://blog.chezs.me/diary/2021-05-12/</link><pubDate>Wed, 12 May 2021 22:04:46 +0800</pubDate><guid>https://blog.chezs.me/diary/2021-05-12/</guid><description/></item><item><title>避免在同一个上下文替换全局变量/方法，否则容易大坑。例如log4js的replaceConsole存在调用栈溢出风险。层与层之间应该有较强的隔离。</title><link>https://blog.chezs.me/diary/2021-04-27/</link><pubDate>Tue, 27 Apr 2021 22:19:51 +0800</pubDate><guid>https://blog.chezs.me/diary/2021-04-27/</guid><description/></item><item><title>获取简单性的两种方法：一是减少同时关注的本质性复杂度的量，二是避免发生不必要的偶然的复杂度</title><link>https://blog.chezs.me/diary/2021-04-08/</link><pubDate>Thu, 08 Apr 2021 00:51:15 +0800</pubDate><guid>https://blog.chezs.me/diary/2021-04-08/</guid><description/></item><item><title>鲜活的数据-读书笔记</title><link>https://blog.chezs.me/posts/visualize-this-reading-note/</link><pubDate>Tue, 06 Apr 2021 22:59:41 +0800</pubDate><guid>https://blog.chezs.me/posts/visualize-this-reading-note/</guid><description>清明假期阅读了《鲜活的数据》，这是一本数据可视化入门读物，可以作为《用图表说话》的补充。《用图表说话》，从“确定要表达的信息”出发，“确定相对关系”，最后“选择图表形式”。但是我们有时并不知道“要表达的信息”，《鲜活的数据》给出了一些帮助。
数据可视化通常关注：数据之间的关系、分布、模式和异常。
当数据的维度较少时，一切都很直观。一旦开始考虑更多因素，数据间的关系变得更加复杂，我们可以用数据可视化的方式发现并强调这些关系。
发现关系、分布和模式 第一个方面，发现关系和分布:
两个维度：散点图+回归拟合曲线 通常就够了 三个维度：可以考虑气泡图 多个维度：散点图矩阵，例如Matlab, AntV 多个维度：直方图矩阵 发现差异 第二个方面是发现差异，有时候也意味着发现关键点。
多个维度：热点图、雷达图 多个维度：平行坐标图 减少维度 第三个方面，多个维度太复杂了，需要减少维度。通常会把数据分组。
多维向量法：手动分组，或者分类、聚类 作者提供的一些材料 https://flowingdata.com
图表矩阵
热点图
平行坐标图</description></item><item><title>迷茫时往往没有认知主要问题，没有主线逻辑</title><link>https://blog.chezs.me/diary/2021-04-01/</link><pubDate>Thu, 01 Apr 2021 00:34:06 +0800</pubDate><guid>https://blog.chezs.me/diary/2021-04-01/</guid><description/></item><item><title>业务增长时要关注如何赚钱，以及扫清赚钱道路的阻碍；业务稳定时要关注如何省钱，以及对外输出提升影响力</title><link>https://blog.chezs.me/diary/2021-03-31/</link><pubDate>Thu, 01 Apr 2021 00:30:53 +0800</pubDate><guid>https://blog.chezs.me/diary/2021-03-31/</guid><description/></item><item><title>对方案时，要保证多个关键人员掌握细节</title><link>https://blog.chezs.me/diary/2021-03-30/</link><pubDate>Tue, 30 Mar 2021 22:52:23 +0800</pubDate><guid>https://blog.chezs.me/diary/2021-03-30/</guid><description/></item><item><title>在不知所措时，尝试从相似事物中找方案</title><link>https://blog.chezs.me/diary/2021-03-28/</link><pubDate>Sun, 28 Mar 2021 20:18:48 +0800</pubDate><guid>https://blog.chezs.me/diary/2021-03-28/</guid><description/></item><item><title>做正确的事很重要。如果为了达成目标而hack，那么很可能结果是“当你写了一个乱七八糟的程序 它却恰好完成了任务”</title><link>https://blog.chezs.me/diary/2021-03-25/</link><pubDate>Thu, 25 Mar 2021 23:27:15 +0800</pubDate><guid>https://blog.chezs.me/diary/2021-03-25/</guid><description/></item><item><title>不要为了提升局部效率而影响整体复杂度和可用性</title><link>https://blog.chezs.me/diary/2021-03-24/</link><pubDate>Wed, 24 Mar 2021 23:25:39 +0800</pubDate><guid>https://blog.chezs.me/diary/2021-03-24/</guid><description/></item><item><title>100天</title><link>https://blog.chezs.me/diary/2021-03-23/</link><pubDate>Tue, 23 Mar 2021 23:25:25 +0800</pubDate><guid>https://blog.chezs.me/diary/2021-03-23/</guid><description/></item><item><title>在情绪不好时应该主动叫暂停</title><link>https://blog.chezs.me/diary/2021-03-22/</link><pubDate>Mon, 22 Mar 2021 23:25:17 +0800</pubDate><guid>https://blog.chezs.me/diary/2021-03-22/</guid><description/></item><item><title>尽量在一张图只有一种颜色，否则就要考虑这张图表达的内容是否太多了</title><link>https://blog.chezs.me/diary/2021-03-19/</link><pubDate>Fri, 19 Mar 2021 22:54:55 +0800</pubDate><guid>https://blog.chezs.me/diary/2021-03-19/</guid><description/></item><item><title>温暖的家进度更新，学习正面管教</title><link>https://blog.chezs.me/diary/2021-03-14/</link><pubDate>Sun, 14 Mar 2021 22:41:46 +0800</pubDate><guid>https://blog.chezs.me/diary/2021-03-14/</guid><description/></item><item><title>我需要梦想的具像化</title><link>https://blog.chezs.me/diary/2021-03-10/</link><pubDate>Wed, 10 Mar 2021 22:14:27 +0800</pubDate><guid>https://blog.chezs.me/diary/2021-03-10/</guid><description/></item><item><title>如何避免35岁危机？保持健康和竞争力，提升个人影响力，降低消费，保持信心，理性等待时机。</title><link>https://blog.chezs.me/diary/2021-03-08/</link><pubDate>Tue, 09 Mar 2021 00:06:21 +0800</pubDate><guid>https://blog.chezs.me/diary/2021-03-08/</guid><description/></item><item><title>风险管理入门</title><link>https://blog.chezs.me/posts/risk-manage-getting-started/</link><pubDate>Tue, 09 Mar 2021 00:02:01 +0800</pubDate><guid>https://blog.chezs.me/posts/risk-manage-getting-started/</guid><description>风险管理主要包括：风险识别、风险量化、风险对策
风险识别 收集信息：包括技术复杂度、排期、分工等，涉及技术/人员/时间等多方面成本 执行：贯穿在整个项目中，常见方法：日会、问题同步、checklist 结果：风险事件、风险因素、风险征兆 风险量化 风险的容忍程度：结果指标、上线时间等 执行： 结果指标：求解/模拟期望结果指标 上线时间：给出多种方案的排期 风险对策： 方法论： 避免：针对性的排除特定风险点 减缓：减少投入等 吸纳：准备预防性方案，同时做好被动接受失败的准备 收集信息：当前面临的风险，已经发生的事故 执行： 针对性解决风险点：找主R解决问题，同时进一步思考这是一个事件还是一系列事件，发现背后的问题 减少投入：如果条件允许，减少投入 预防性方案：针对风险征兆，准备兜底 结果： 技术：技术方案、原型、预估收益、预防性方案 协作：协作流程，多方达成一致，主R，定期会议机制 组织：定目标、内部分工</description></item><item><title>Dream List</title><link>https://blog.chezs.me/dream/</link><pubDate>Sun, 07 Mar 2021 23:57:16 +0800</pubDate><guid>https://blog.chezs.me/dream/</guid><description>一本专著
一个温暖的家
开一家博物馆
说明 Photo by Green Chameleon on Unsplash
Photo by Patrick Perkins on Unsplash
Photo by Joshua Rawson-Harris on Unsplash</description></item><item><title>人应该有点梦想，眼里要有光</title><link>https://blog.chezs.me/diary/2021-03-07/</link><pubDate>Sun, 07 Mar 2021 23:57:16 +0800</pubDate><guid>https://blog.chezs.me/diary/2021-03-07/</guid><description/></item><item><title>再次认识V8引擎</title><link>https://blog.chezs.me/posts/v8-engine-overall/</link><pubDate>Mon, 15 Feb 2021 22:30:47 +0800</pubDate><guid>https://blog.chezs.me/posts/v8-engine-overall/</guid><description>本文于2020.01.03发表到掘金
背景 最近RN新版本支持了V8引擎，也给我一个契机重新认识V8。本文共有2部分，一部分阐述V8内部的组成和优化技术，另一部分阐述V8和RN的关系。
解释与编译：JS在V8的执行过程 如下图所示，JS在V8的执行过程分为解释和编译两种模式。
分为2种模式的原因主要在于：
把JS源码解释为字节码，减少机器码占用的内存空间，牺牲时间换空间 优先进行解释，提高代码的启动速度 针对特定的方法（例如高频调用），JIT编译为机器码，保证运行性能 分层解释与编译，保证V8可维护性 如果考虑垃圾回收，执行过程也可以这样表示。
解释器 Ignition 解释器的输入是JS源码，输出是字节码（bytecode）。同时，还会输出Feedback Vector。
像其他解释器一样，Ignition先根据源码构建AST，接着把AST转换成bytecode，最终在VM上解释运行。
设计bytecode 在设计bytecode时，Ignition采用了Registry Machine来表示bytecode。由于bytecode是机器码的一种抽象表示，因此以Registry Machine的形式表示bytecode，可以让bytecode自然而然地被解释运行。
Ignition使用了r0，r1，r2……和一个acc加法寄存器。
举例：
注意看 LdaNamedProperty a0, [0], [4]，LdaNamedProperty对应着读取obj.x的行为，其中，a0映射到obj，[0]映射到x，[4]映射到Feedback Vector，用来做性能优化。
Feedback Vector Ignition在解释JS源码时，会构建Feedback Vector，并共享给TurboFan。Feedback的结构主要包括4点：
SharedFunctionInfo：闭包的描述信息 Invocation count: 代表这个闭包被执行的次数 Optimized Code: 标记是否存在TurboFan编译出来的优化代码 BinaryOp：记录了闭包输入输出的类型 举例：
function add(x, y) { return x + y } add(1, 2); - feedback vector: 0xb5101eaa091: [FeedbackVector] in OldSpace - length: 1 SharedFunctionInfo: 0xb5101ea99c9 &amp;lt;SharedFunctionInfo add&amp;gt; Optimized Code: 0 Invocation Count: 1 Profiler Ticks: 0 Slot #0 BinaryOp BinaryOp:SignedSmall 注意看BinaryOp:SignedSmall，它的含义是返回了SignedSmall类型。</description></item><item><title>Hello Word</title><link>https://blog.chezs.me/posts/hello-word/</link><pubDate>Mon, 15 Feb 2021 21:37:33 +0800</pubDate><guid>https://blog.chezs.me/posts/hello-word/</guid><description>Hello Word :D</description></item></channel></rss>